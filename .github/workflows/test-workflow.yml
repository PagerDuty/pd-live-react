name: Test Framework Suite

on:
  pull_request:
    branches: [ "develop" ]
  merge_group:

concurrency:
  group: 'develop'
  cancel-in-progress: false

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - name: Node Version
        run: node -v
      - name: Install Yarn
        run: npm install -g yarn
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install project dependencies (via cache)
        run: yarn --frozen-lockfile --prefer-offline --ignore-optional

  jest:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - name: Node Version
        run: node -v
      - name: Install Yarn
        run: npm install -g yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install project dependencies (via cache)
        run: yarn --frozen-lockfile --prefer-offline --ignore-optional
      - name: Run Jest Tests
        run: yarn jest

  cypress-run:
    needs: install
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        e2e:
          - Incidents/incidents.spec.js
          - Query/query.spec.js
          - Search/search.spec.js
          - Settings/settings.spec.js
          - app.spec.js
    env:
      VITE_PD_ENV: 'github-ci'
      VITE_PD_SUBDOMAIN_ALLOW_LIST: '*'
      VITE_PD_USER_TOKEN: ${{ secrets.PD_INTEGRATION_USER_TOKEN }}
      VITE_PD_REQUIRED_ABILITY: ${{ secrets.PD_REQUIRED_ABILITY }}
      VITE_DD_APPLICATION_ID: ${{ secrets.DD_APPLICATION_ID }}
      VITE_DD_CLIENT_TOKEN: ${{ secrets.DD_CLIENT_TOKEN }}
      VITE_DD_SITE: ${{ secrets.DD_SITE }}
      VITE_DD_SAMPLE_RATE: ${{ secrets.DD_SAMPLE_RATE }}
      VITE_DD_TRACK_INTERACTIONS: ${{ secrets.DD_TRACK_INTERACTIONS }}
      VITE_DD_DEFAULT_PRIVACY_LEVEL: ${{ secrets.DD_DEFAULT_PRIVACY_LEVEL }}
      CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - name: Node Version
        run: node -v
      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          start: yarn start
          wait-on: 'http://localhost:3000' # Waits for above
          browser: chrome
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          # Specify Cypress test spec files in each matrix job to deterministically run tests in parallel
          spec: cypress/e2e/${{ matrix.e2e }}
          parallel: false # Don't use Cypress in-built parallelization
          install: false # Install Cypress only, don't install dependencies
          cache-key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
